name: development-deployment

env:
  APP_NAME: "planning-poker"
  ENV_NAME: "Planningpoker-env"
  S3_BUCKET: "elasticbeanstalk-us-east-1-448561077416"
  AWS_REGION: us-east-1
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}

on:
  push:
    branches:
      - main

jobs:
  create_eb_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          echo "Creating source bundle"
          cd backend
          zip -r ${{env.APP_NAME}}.zip ./src Dockerfile package.json tsconfig.build.json yarn.lAWS_VERSION_LABELock tsconfig.json

          echo "Uploading source bundle to S3"
          aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/"${{env.APP_NAME}}-${{env.PIPELINE_ID}}.zip"

      - name: Create new application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{env.APP_NAME}} \
            --source-bundle S3Bucket=${{env.S3_BUCKET}},S3Key="${{env.APP_NAME}}-${{env.PIPELINE_ID}}.zip" \
            --version-label "${{env.APP_NAME}}-${{env.PIPELINE_ID}}" \
            --description "commit-sha-${{github.sha}}"
      - name: Deploy new application version
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{env.ENV_NAME}} \
            --version-label "${{env.APP_NAME}}-${{env.PIPELINE_ID}}"
      - name: Wait for deployment to finish
        run: |
          aws elasticbeanstalk wait environment-updated \
            --environment-name ${{env.ENV_NAME}}
